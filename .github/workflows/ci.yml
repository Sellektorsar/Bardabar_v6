name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Lint, Format, E2E, Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci --include=dev

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Lint
        run: npm run lint

      - name: Prettier (check)
        run: npm run format

      - name: Build
        run: npm run build

      - name: Run E2E tests (Playwright)
        run: npm run test:e2e

      - name: Upload Playwright report (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          if-no-files-found: ignore
          retention-days: 7

      - name: Upload production build
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          if-no-files-found: error
          retention-days: 7

  deploy:
    name: Deploy to VPS (rsync over SSH)
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && vars.DEPLOY_ENABLED == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Prepare SSH key
        shell: bash
        env:
          SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Deploy via rsync
        shell: bash
        env:
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          rsync -az --delete -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa" \
            dist/ "$DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH"

# Notes:
# - Set repository variable DEPLOY_ENABLED=true to enable deployment on main branch.
# - Required secrets: DEPLOY_SSH_KEY (private key), DEPLOY_USER, DEPLOY_HOST, DEPLOY_PATH.
# - Ensure the destination path exists and Nginx serves from it (e.g., /var/www/bardabar/current).
