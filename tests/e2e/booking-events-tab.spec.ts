import { expect, Page, test } from "@playwright/test";
import * as fs from "fs";
import * as path from "path";

/**
 * E2E-—Ç–µ—Å—Ç –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è" –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ —Å—Ç–∞—Ç—É—Å–æ–≤/–æ–ø–ª–∞—Ç—ã –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
 */

test.describe("Booking Events Tab E2E Tests", () => {
  let screenshotDir: string;
  let testRunId: string;

  test.beforeEach(async ({ page }) => {
    // –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –ø–∞–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–≥–æ–Ω–∞ —Ç–µ—Å—Ç–∞
    const timestamp = new Date().toISOString().replace(/[:.]/g, "-");
    testRunId = `events-test-run-${timestamp}`;
    screenshotDir = path.join(process.cwd(), "test-screenshots", testRunId);

    // –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    if (!fs.existsSync(screenshotDir)) {
      fs.mkdirSync(screenshotDir, { recursive: true });
    }

    console.log(`üìÅ –°–∫—Ä–∏–Ω—à–æ—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${screenshotDir}`);

    // –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
    await page.goto("http://localhost:5173");
    await page.waitForLoadState("networkidle");

    // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ê–¥–º–∏–Ω" –≤ —Ö–µ–¥–µ—Ä–µ (—É—Å—Ç–æ–π—á–∏–≤—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä)
    let adminButton = page.getByTestId("btn-open-admin");
    if (!(await adminButton.isVisible())) {
      // –§–æ–ª–±—ç–∫: –º–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è ‚Äî —è–≤–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä testid
      const menuToggle = page
        .getByRole("button")
        .filter({ has: page.locator("svg.h-4.w-4") })
        .nth(1);
      await menuToggle.click();
      adminButton = page.getByTestId("btn-open-admin-mobile");
    }
    await expect(adminButton).toBeVisible();
    await adminButton.click();

    // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    await page.waitForSelector("text=–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å");
    await expect(page.getByRole("heading", { name: "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", level: 2 })).toBeVisible();
  });

  /**
   * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
   */
  async function takeScreenshot(page: Page, name: string) {
    const screenshotPath = path.join(screenshotDir, `${name}.png`);
    await page.screenshot({ path: screenshotPath, fullPage: true });
    console.log(`üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${name}.png`);
  }

  test("Events tab counters and filtering functionality", async ({ page }) => {
    console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –≤–∫–ª–∞–¥–∫–∏ ¬´–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è¬ª...");

    // 1. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è" –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    console.log("üìã –®–∞–≥ 1: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è");

    const bookingsTab = page.getByRole("tab", { name: /–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è/i });
    await expect(bookingsTab).toBeVisible();
    await bookingsTab.click();

    // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ BookingManagement
    await page.waitForSelector("text=–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏");
    await expect(
      page.getByRole("heading", { name: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏", level: 3 }),
    ).toBeVisible();

    // 2. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"
    console.log("üîç –®–∞–≥ 2: –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è");
    const eventsTab = page.getByTestId("tab-events");
    await expect(eventsTab).toBeVisible();
    await eventsTab.click();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—á–µ—Ç—á–∏–∫ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –≤–∫–ª–∞–¥–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
    const eventsCount = page.getByTestId("tab-events-count");
    await expect(eventsCount).toBeVisible();
    const eventsCountText = await eventsCount.textContent();
    console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π: ${eventsCountText}`);

    await takeScreenshot(page, "01-events-tab-active");

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–Ω–µ–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Å—Ç–∞—Ç—É—Å–æ–≤
    console.log("üîß –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã —Å—Ç–∞—Ç—É—Å–æ–≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π");

    const statusAllBtn = page.getByTestId("events-status-all");
    const statusPendingBtn = page.getByTestId("events-status-pending");
    const statusConfirmedBtn = page.getByTestId("events-status-confirmed");
    const statusCompletedBtn = page.getByTestId("events-status-completed");
    const statusCancelledBtn = page.getByTestId("events-status-cancelled");

    await expect(statusAllBtn).toBeVisible();
    await expect(statusPendingBtn).toBeVisible();
    await expect(statusConfirmedBtn).toBeVisible();
    await expect(statusCompletedBtn).toBeVisible();
    await expect(statusCancelledBtn).toBeVisible();

    await takeScreenshot(page, "02-events-status-filters-panel");

    // 4. –ß–∏—Ç–∞–µ–º –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤
    console.log("üìä –®–∞–≥ 4: –ß–∏—Ç–∞–µ–º –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤");

    const evAllCountEl = page.getByTestId("events-status-all-count");
    const evPendingCountEl = page.getByTestId("events-status-pending-count");
    const evConfirmedCountEl = page.getByTestId("events-status-confirmed-count");
    const evCompletedCountEl = page.getByTestId("events-status-completed-count");
    const evCancelledCountEl = page.getByTestId("events-status-cancelled-count");

    await expect(evAllCountEl).toBeVisible();
    await expect(evPendingCountEl).toBeVisible();
    await expect(evConfirmedCountEl).toBeVisible();
    await expect(evCompletedCountEl).toBeVisible();
    await expect(evCancelledCountEl).toBeVisible();

    const evAllCount = parseInt((await evAllCountEl.textContent()) || "0");
    const evPendingCount = parseInt((await evPendingCountEl.textContent()) || "0");
    const evConfirmedCount = parseInt((await evConfirmedCountEl.textContent()) || "0");
    const evCompletedCount = parseInt((await evCompletedCountEl.textContent()) || "0");
    const evCancelledCount = parseInt((await evCancelledCountEl.textContent()) || "0");

    console.log(
      `üìà –°—á–µ—Ç—á–∏–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: –í—Å–µ=${evAllCount}, –û–∂–∏–¥–∞–µ—Ç=${evPendingCount}, –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ=${evConfirmedCount}, –ó–∞–≤–µ—Ä—à–µ–Ω–æ=${evCompletedCount}, –û—Ç–º–µ–Ω–µ–Ω–æ=${evCancelledCount}`,
    );

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å—á–µ—Ç—á–∏–∫–æ–≤ —Å—Ç–∞—Ç—É—Å–æ–≤
    const evTotalByStatuses = evPendingCount + evConfirmedCount + evCompletedCount + evCancelledCount;
    expect(evAllCount).toBe(evTotalByStatuses);
    console.log("‚úÖ –°—á–µ—Ç—á–∏–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã");

    // 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
    console.log("üîÑ –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º");

    const visibleEventCards = () => page.locator("[data-testid^='event-booking-card-']");

    // –û–∂–∏–¥–∞–µ—Ç
    if (evPendingCount > 0) {
      await statusPendingBtn.click();
      const count = await visibleEventCards().count();
      console.log(`üëÄ –í–∏–¥–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ (–û–∂–∏–¥–∞–µ—Ç): ${count}`);
      expect(count).toBe(evPendingCount);
      await takeScreenshot(page, "03-events-status-pending");
    } else {
      console.log("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∏–ª—å—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞ '–û–∂–∏–¥–∞–µ—Ç' ‚Äî –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    }

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ
    if (evConfirmedCount > 0) {
      await statusConfirmedBtn.click();
      const count = await visibleEventCards().count();
      console.log(`üëÄ –í–∏–¥–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ (–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ): ${count}`);
      expect(count).toBe(evConfirmedCount);
      await takeScreenshot(page, "04-events-status-confirmed");
    } else {
      console.log("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∏–ª—å—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞ '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ' ‚Äî –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    }

    // –ó–∞–≤–µ—Ä—à–µ–Ω–æ
    if (evCompletedCount > 0) {
      await statusCompletedBtn.click();
      const count = await visibleEventCards().count();
      console.log(`üëÄ –í–∏–¥–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ (–ó–∞–≤–µ—Ä—à–µ–Ω–æ): ${count}`);
      expect(count).toBe(evCompletedCount);
      await takeScreenshot(page, "05-events-status-completed");
    } else {
      console.log("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∏–ª—å—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞ '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' ‚Äî –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    }

    // –û—Ç–º–µ–Ω–µ–Ω–æ
    if (evCancelledCount > 0) {
      await statusCancelledBtn.click();
      const count = await visibleEventCards().count();
      console.log(`üëÄ –í–∏–¥–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ (–û—Ç–º–µ–Ω–µ–Ω–æ): ${count}`);
      expect(count).toBe(evCancelledCount);
      await takeScreenshot(page, "06-events-status-cancelled");
    } else {
      console.log("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∏–ª—å—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞ '–û—Ç–º–µ–Ω–µ–Ω–æ' ‚Äî –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ "–í—Å–µ"
    await statusAllBtn.click();

    // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–Ω–µ–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –æ–ø–ª–∞—Ç—ã
    console.log("üí≥ –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã —Å—Ç–∞—Ç—É—Å–æ–≤ –æ–ø–ª–∞—Ç—ã");

    const payAllBtn = page.getByTestId("events-payment-all");
    const payPaidBtn = page.getByTestId("events-payment-paid");
    const payPendingBtn = page.getByTestId("events-payment-pending");
    const payRequiresBtn = page.getByTestId("events-payment-requires_payment");

    await expect(payAllBtn).toBeVisible();
    await expect(payPaidBtn).toBeVisible();
    await expect(payPendingBtn).toBeVisible();
    await expect(payRequiresBtn).toBeVisible();

    await takeScreenshot(page, "07-events-payment-filters-panel");

    const payAllCountEl = page.getByTestId("events-payment-all-count");
    const payPaidCountEl = page.getByTestId("events-payment-paid-count");
    const payPendingCountEl = page.getByTestId("events-payment-pending-count");
    const payRequiresCountEl = page.getByTestId("events-payment-requires_payment-count");

    await expect(payAllCountEl).toBeVisible();
    await expect(payPaidCountEl).toBeVisible();
    await expect(payPendingCountEl).toBeVisible();
    await expect(payRequiresCountEl).toBeVisible();

    const payAllCount = parseInt((await payAllCountEl.textContent()) || "0");
    const payPaidCount = parseInt((await payPaidCountEl.textContent()) || "0");
    const payPendingCount = parseInt((await payPendingCountEl.textContent()) || "0");
    const payRequiresCount = parseInt((await payRequiresCountEl.textContent()) || "0");

    console.log(
      `üìà –°—á–µ—Ç—á–∏–∫–∏ –æ–ø–ª–∞—Ç—ã: –í—Å–µ=${payAllCount}, –û–ø–ª–∞—á–µ–Ω–æ=${payPaidCount}, –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã=${payPendingCount}, –¢—Ä–µ–±—É–µ—Ç –æ–ø–ª–∞—Ç—ã=${payRequiresCount}`,
    );

    // –í–∞–∂–Ω–æ: –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ–ø–ª–∞—Ç—ã, —Ç.–∫. –≤–æ–∑–º–æ–∂–Ω—ã –∑–∞–ø–∏—Å–∏ –±–µ–∑ paymentStatus

    // –û–ø–ª–∞—á–µ–Ω–æ
    if (payPaidCount > 0) {
      await payPaidBtn.click();
      const cards = visibleEventCards();
      const count = await cards.count();
      console.log(`üëÄ –í–∏–¥–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ (–û–ø–ª–∞—á–µ–Ω–æ): ${count}`);
      expect(count).toBe(payPaidCount);

      for (let i = 0; i < count; i++) {
        const badge = cards.nth(i).getByTestId("event-payment-badge");
        await expect(badge).toHaveText(/–û–ø–ª–∞—á–µ–Ω–æ/i);
      }

      await takeScreenshot(page, "08-events-pay-paid");
    } else {
      console.log("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –æ–ø–ª–∞—Ç—ã '–û–ø–ª–∞—á–µ–Ω–æ' ‚Äî –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    }

    // –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã
    if (payPendingCount > 0) {
      await payPendingBtn.click();
      const cards = visibleEventCards();
      const count = await cards.count();
      console.log(`üëÄ –í–∏–¥–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ (–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã): ${count}`);
      expect(count).toBe(payPendingCount);

      for (let i = 0; i < count; i++) {
        const badge = cards.nth(i).getByTestId("event-payment-badge");
        await expect(badge).toHaveText(/–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã/i);
      }

      await takeScreenshot(page, "09-events-pay-pending");
    } else {
      console.log("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –æ–ø–ª–∞—Ç—ã '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã' ‚Äî –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    }

    // –¢—Ä–µ–±—É–µ—Ç –æ–ø–ª–∞—Ç—ã
    if (payRequiresCount > 0) {
      await payRequiresBtn.click();
      const cards = visibleEventCards();
      const count = await cards.count();
      console.log(`üëÄ –í–∏–¥–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ (–¢—Ä–µ–±—É–µ—Ç –æ–ø–ª–∞—Ç—ã): ${count}`);
      expect(count).toBe(payRequiresCount);

      for (let i = 0; i < count; i++) {
        const badge = cards.nth(i).getByTestId("event-payment-badge");
        await expect(badge).toHaveText(/–¢—Ä–µ–±—É–µ—Ç –æ–ø–ª–∞—Ç—ã/i);
      }

      await takeScreenshot(page, "10-events-pay-requires");
    } else {
      console.log("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –æ–ø–ª–∞—Ç—ã '–¢—Ä–µ–±—É–µ—Ç –æ–ø–ª–∞—Ç—ã' ‚Äî –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    }

    // 7. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ "–í—Å–µ" –∏ –∏—Ç–æ–≥–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç–æ—á–µ–∫
    console.log("üîÑ –®–∞–≥ 7: –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ñ–∏–ª—å—Ç—Ä–∞–º '–í—Å–µ'");
    await statusAllBtn.click();
    await payAllBtn.click();

    const finalCards = visibleEventCards();
    const finalCount = await finalCards.count();
    const evAllCountFinal = parseInt((await evAllCountEl.textContent()) || "0");

    console.log(`‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è ${finalCount} –∏–∑ ${evAllCountFinal} –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π`);
    expect(finalCount).toBe(evAllCountFinal);

    await takeScreenshot(page, "11-events-final-state");
  });
});