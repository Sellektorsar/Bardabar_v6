import { expect, Page, test } from "@playwright/test";
import * as fs from "fs";
import * as path from "path";

/**
 * E2E-—Ç–µ—Å—Ç –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "–°—Ç–æ–ª–∏–∫–∏" –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ —Å—Ç–∞—Ç—É—Å–æ–≤ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
 */

test.describe("Booking Tables Tab E2E Tests", () => {
  let screenshotDir: string;
  let testRunId: string;

  test.beforeEach(async ({ page }) => {
    // –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –ø–∞–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–≥–æ–Ω–∞ —Ç–µ—Å—Ç–∞
    const timestamp = new Date().toISOString().replace(/[:.]/g, "-");
    testRunId = `tables-test-run-${timestamp}`;
    screenshotDir = path.join(process.cwd(), "test-screenshots", testRunId);

    // –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    if (!fs.existsSync(screenshotDir)) {
      fs.mkdirSync(screenshotDir, { recursive: true });
    }

    console.log(`üìÅ –°–∫—Ä–∏–Ω—à–æ—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${screenshotDir}`);

    // –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
    await page.goto("http://localhost:5173");
    await page.waitForLoadState("networkidle");

    // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ê–¥–º–∏–Ω" –≤ —Ö–µ–¥–µ—Ä–µ
    const adminButton = page.getByRole("button", { name: "–ê–¥–º–∏–Ω" });
    await expect(adminButton).toBeVisible();
    await adminButton.click();

    // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    await page.waitForSelector("text=–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å");
    await expect(page.getByRole("heading", { name: "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", level: 2 })).toBeVisible();
  });

  /**
   * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
   */
  async function takeScreenshot(page: Page, name: string) {
    const screenshotPath = path.join(screenshotDir, `${name}.png`);
    await page.screenshot({ path: screenshotPath, fullPage: true });
    console.log(`üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${name}.png`);
  }

  test("Tables tab counters and filtering functionality", async ({ page }) => {
    console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –≤–∫–ª–∞–¥–∫–∏ ¬´–°—Ç–æ–ª–∏–∫–∏¬ª...");

    // 1. –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è" –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
    console.log("üìã –®–∞–≥ 1: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è");

    const bookingsTab = page.getByRole("tab", { name: /–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è/i });
    await expect(bookingsTab).toBeVisible();
    await bookingsTab.click();

    // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ BookingManagement
    await page.waitForSelector("text=–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏");
    await expect(
      page.getByRole("heading", { name: "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è–º–∏", level: 3 }),
    ).toBeVisible();

    // –°–∫—Ä–∏–Ω—à–æ—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º BookingManagement
    await takeScreenshot(page, "01-admin-booking-management-loaded");

    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Ç–∫—Ä—ã—Ç–∞ –≤–∫–ª–∞–¥–∫–∞ "–°—Ç–æ–ª–∏–∫–∏"
    console.log("üîç –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∫–ª–∞–¥–∫—É –°—Ç–æ–ª–∏–∫–∏");

    const tablesTab = page.getByTestId("tab-tables");
    await expect(tablesTab).toBeVisible();
    await expect(tablesTab).toHaveAttribute("data-state", "active");

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—á–µ—Ç—á–∏–∫ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –≤–∫–ª–∞–¥–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
    const tablesCount = page.getByTestId("tab-tables-count");
    await expect(tablesCount).toBeVisible();
    const tablesCountText = await tablesCount.textContent();
    console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–∏–∫–æ–≤: ${tablesCountText}`);

    // –°–∫—Ä–∏–Ω—à–æ—Ç –≤–∫–ª–∞–¥–∫–∏ —Å—Ç–æ–ª–∏–∫–æ–≤
    await takeScreenshot(page, "02-tables-tab-active");

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–Ω–µ–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Å—Ç–∞—Ç—É—Å–æ–≤
    console.log("üîß –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã —Å—Ç–∞—Ç—É—Å–æ–≤");

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    const filterAll = page.getByTestId("tables-status-all");
    const filterPending = page.getByTestId("tables-status-pending");
    const filterConfirmed = page.getByTestId("tables-status-confirmed");
    const filterCompleted = page.getByTestId("tables-status-completed");
    const filterCancelled = page.getByTestId("tables-status-cancelled");

    await expect(filterAll).toBeVisible();
    await expect(filterPending).toBeVisible();
    await expect(filterConfirmed).toBeVisible();
    await expect(filterCompleted).toBeVisible();
    await expect(filterCancelled).toBeVisible();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ñ–∏–ª—å—Ç—Ä "–í—Å–µ" –∞–∫—Ç–∏–≤–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    await expect(filterAll).toHaveAttribute("data-state", "on");

    // –°–∫—Ä–∏–Ω—à–æ—Ç –ø–∞–Ω–µ–ª–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    await takeScreenshot(page, "03-status-filters-panel");

    // 4. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å—á–µ—Ç—á–∏–∫–æ–≤
    console.log("üìä –®–∞–≥ 4: –ß–∏—Ç–∞–µ–º –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–µ —Å—á–µ—Ç—á–∏–∫–∏");

    const allCountEl = page.getByTestId("tables-status-all-count");
    const pendingCountEl = page.getByTestId("tables-status-pending-count");
    const confirmedCountEl = page.getByTestId("tables-status-confirmed-count");
    const completedCountEl = page.getByTestId("tables-status-completed-count");
    const cancelledCountEl = page.getByTestId("tables-status-cancelled-count");

    await expect(allCountEl).toBeVisible();
    await expect(pendingCountEl).toBeVisible();
    await expect(confirmedCountEl).toBeVisible();
    await expect(completedCountEl).toBeVisible();
    await expect(cancelledCountEl).toBeVisible();

    const allCount = parseInt((await allCountEl.textContent()) || "0");
    const pendingCount = parseInt((await pendingCountEl.textContent()) || "0");
    const confirmedCount = parseInt((await confirmedCountEl.textContent()) || "0");
    const completedCount = parseInt((await completedCountEl.textContent()) || "0");
    const cancelledCount = parseInt((await cancelledCountEl.textContent()) || "0");

    console.log(
      `üìà –°—á–µ—Ç—á–∏–∫–∏: –í—Å–µ=${allCount}, –û–∂–∏–¥–∞–µ—Ç=${pendingCount}, –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ=${confirmedCount}, –ó–∞–≤–µ—Ä—à–µ–Ω–æ=${completedCount}, –û—Ç–º–µ–Ω–µ–Ω–æ=${cancelledCount}`,
    );

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å—á–µ—Ç—á–∏–∫–æ–≤
    const totalCount = pendingCount + confirmedCount + completedCount + cancelledCount;
    expect(allCount).toBe(totalCount);
    console.log("‚úÖ –°—á–µ—Ç—á–∏–∫–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã");

    // 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É "–û–∂–∏–¥–∞–µ—Ç"
    if (pendingCount > 0) {
      console.log("üîÑ –®–∞–≥ 5: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä '–û–∂–∏–¥–∞–µ—Ç'");

      await filterPending.click();
      await expect(filterPending).toHaveAttribute("data-state", "on");
      await expect(filterAll).toHaveAttribute("data-state", "off");

      // –ü–æ–¥—Å—á–µ—Ç –≤–∏–¥–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
      const visibleBookings = page.locator("[data-testid^='table-booking-card-']");
      const visibleCount = await visibleBookings.count();

      console.log(`üëÄ –í–∏–¥–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: ${visibleCount}`);
      expect(visibleCount).toBe(pendingCount);

      // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –≤—Å–µ –≤–∏–¥–∏–º—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–º–µ—é—Ç —Å—Ç–∞—Ç—É—Å "–û–∂–∏–¥–∞–µ—Ç"
      for (let i = 0; i < visibleCount; i++) {
        const booking = visibleBookings.nth(i);
        const statusBadge = booking.getByTestId("table-status-badge");
        await expect(statusBadge).toHaveText(/–û–∂–∏–¥–∞–µ—Ç/i);
      }

      await takeScreenshot(page, "04-pending-filter-applied");
      console.log("‚úÖ –§–∏–ª—å—Ç—Ä '–û–∂–∏–¥–∞–µ—Ç' —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
    } else {
      console.log("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞ '–û–∂–∏–¥–∞–µ—Ç' - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    }

    // 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ"
    if (confirmedCount > 0) {
      console.log("üîÑ –®–∞–≥ 6: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ'");

      await filterConfirmed.click();
      await expect(filterConfirmed).toHaveAttribute("data-state", "on");
      await expect(filterPending).toHaveAttribute("data-state", "off");

      const visibleBookings = page.locator("[data-testid^='table-booking-card-']");
      const visibleCount = await visibleBookings.count();

      console.log(`üëÄ –í–∏–¥–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: ${visibleCount}`);
      expect(visibleCount).toBe(confirmedCount);

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –≤–∏–¥–∏–º—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
      for (let i = 0; i < visibleCount; i++) {
        const booking = visibleBookings.nth(i);
        const statusBadge = booking.getByTestId("table-status-badge");
        await expect(statusBadge).toHaveText(/–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ/i);
      }

      await takeScreenshot(page, "05-confirmed-filter-applied");
      console.log("‚úÖ –§–∏–ª—å—Ç—Ä '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ' —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
    } else {
      console.log("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞ '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ' - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    }

    // 7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É "–ó–∞–≤–µ—Ä—à–µ–Ω–æ"
    if (completedCount > 0) {
      console.log("üîÑ –®–∞–≥ 7: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä '–ó–∞–≤–µ—Ä—à–µ–Ω–æ'");

      await filterCompleted.click();
      await expect(filterCompleted).toHaveAttribute("data-state", "on");

      const visibleBookings = page.locator("[data-testid^='table-booking-card-']");
      const visibleCount = await visibleBookings.count();

      expect(visibleCount).toBe(completedCount);

      await takeScreenshot(page, "06-completed-filter-applied");
      console.log("‚úÖ –§–∏–ª—å—Ç—Ä '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
    } else {
      console.log("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞ '–ó–∞–≤–µ—Ä—à–µ–Ω–æ' - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    }

    // 8. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ —Å—Ç–∞—Ç—É—Å—É "–û—Ç–º–µ–Ω–µ–Ω–æ"
    if (cancelledCount > 0) {
      console.log("üîÑ –®–∞–≥ 8: –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä '–û—Ç–º–µ–Ω–µ–Ω–æ'");

      await filterCancelled.click();
      await expect(filterCancelled).toHaveAttribute("data-state", "on");

      const visibleBookings = page.locator("[data-testid^='table-booking-card-']");
      const visibleCount = await visibleBookings.count();

      expect(visibleCount).toBe(cancelledCount);

      await takeScreenshot(page, "07-cancelled-filter-applied");
      console.log("‚úÖ –§–∏–ª—å—Ç—Ä '–û—Ç–º–µ–Ω–µ–Ω–æ' —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
    } else {
      console.log("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞ '–û—Ç–º–µ–Ω–µ–Ω–æ' - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
    }

    // 9. –í–æ–∑–≤—Ä–∞—Ç –∫ —Ñ–∏–ª—å—Ç—Ä—É "–í—Å–µ" –∏ —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log("üîÑ –®–∞–≥ 9: –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ñ–∏–ª—å—Ç—Ä—É '–í—Å–µ'");

    await filterAll.click();
    await expect(filterAll).toHaveAttribute("data-state", "on");

    const finalVisibleBookings = page.locator("[data-testid^='table-booking-card-']");
    const finalVisibleCount = await finalVisibleBookings.count();

    expect(finalVisibleCount).toBe(allCount);
    console.log(
      `‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è ${finalVisibleCount} –∏–∑ ${allCount} –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π`,
    );

    await takeScreenshot(page, "08-all-filter-final-check");

    // 10. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ)
    console.log("üîÑ –®–∞–≥ 10: –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è");

    const refreshButton = page.getByTestId("btn-refresh-bookings");
    await expect(refreshButton).toBeVisible();
    await refreshButton.click();

    // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å spinner –∏–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è)
    await page.waitForTimeout(1000);

    await takeScreenshot(page, "09-after-refresh");
    console.log("‚úÖ –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç");

    console.log("üéâ –¢–µ—Å—Ç –≤–∫–ª–∞–¥–∫–∏ '–°—Ç–æ–ª–∏–∫–∏' –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!");
  });

  test("Empty state display for tables tab", async ({ page }) => {
    console.log("üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è...");

    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"
    const bookingsTab = page.getByRole("tab", { name: /–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è/i });
    await bookingsTab.click();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∫–ª–∞–¥–∫–∏ "–°—Ç–æ–ª–∏–∫–∏"
    const tablesTab = page.getByTestId("tab-tables");
    await expect(tablesTab).toBeVisible();

    // –ï—Å–ª–∏ –Ω–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π, –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    const allCountEl = page.getByTestId("tables-status-all-count");
    const allCount = parseInt((await allCountEl.textContent()) || "0");

    if (allCount === 0) {
      console.log("üì≠ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ");

      const emptyMessage = page.locator("text=–ù–µ—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π —Å—Ç–æ–ª–∏–∫–æ–≤");
      await expect(emptyMessage).toBeVisible();

      await takeScreenshot(page, "empty-state-tables");
      console.log("‚úÖ –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");
    } else {
      console.log("‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è - –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ");
    }
  });
});
