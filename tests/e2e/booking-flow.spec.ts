import { expect, Page, test } from "@playwright/test";
import { addDays, format } from "date-fns";
// import { ru } from "date-fns/locale"; // removed as unused
import * as fs from "fs";
import * as path from "path";

/**
 * –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π e2e-—Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–∏–∫–∞
 * –ü–æ–∫—Ä—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π –æ—Ç –æ—Ç–∫—Ä—ã—Ç–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
 */

test.describe("Booking Flow E2E Tests", () => {
  let screenshotDir: string;
  let testRunId: string;

  test.beforeEach(async ({ page }) => {
    // –°–æ–∑–¥–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –ø–∞–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–≥–æ–Ω–∞ —Ç–µ—Å—Ç–∞
    const timestamp = new Date().toISOString().replace(/[:.]/g, "-");
    testRunId = `test-run-${timestamp}`;
    screenshotDir = path.join(process.cwd(), "test-screenshots", testRunId);

    // –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    if (!fs.existsSync(screenshotDir)) {
      fs.mkdirSync(screenshotDir, { recursive: true });
    }

    console.log(`üìÅ –°–∫—Ä–∏–Ω—à–æ—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${screenshotDir}`);
  });

  test("Complete booking flow with demo mode verification", async ({ page }) => {
    // –í—ã–±–∏—Ä–∞–µ–º –¥–∞—Ç—É –≤ –±—É–¥—É—â–µ–º (–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –±–ª–∏–∂–∞–π—à–∏—Ö 5 –¥–Ω–µ–π). –ï—Å–ª–∏ –º–µ—Å—è—Ü —Å–º–µ–Ω–∏—Ç—Å—è, –∫–∞–ª–µ–Ω–¥–∞—Ä—å –±—É–¥–µ—Ç –ø–µ—Ä–µ–ª–∏—Å—Ç–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∏–∂–µ.
    const today = new Date();
    const targetDate = addDays(today, 5);

    const testData = {
      name: "–ò–≤–∞–Ω –¢–µ—Å—Ç–æ–≤",
      phone: "+7 (999) 123-45-67",
      email: "ivan.testov@example.com",
      date: targetDate, // –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –Ω–µ –ø—Ä–æ—à–µ–¥—à–∞—è –¥–∞—Ç–∞
      time: "19:00",
      guests: "4",
      specialRequests: "–°—Ç–æ–ª–∏–∫ —É –æ–∫–Ω–∞, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ",
    };

    console.log("üöÄ –ù–∞—á–∏–Ω–∞–µ–º e2e-—Ç–µ—Å—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–æ–ª–∏–∫–∞...");

    // 1. –û—Ç–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    console.log("üìÇ –®–∞–≥ 1: –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ");
    await page.goto("http://localhost:5173"); // Vite dev server –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await page.waitForLoadState("networkidle");

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
    const brandH1 = page.getByRole("heading", { level: 1 }).filter({ hasText: "–ë–∞—Ä-–¥–∞-–±–∞—Ä" });
    console.log("üëÄ –ù–∞–π–¥–µ–Ω–æ h1 —Å —Ç–µ–∫—Å—Ç–æ–º ¬´–ë–∞—Ä-–¥–∞-–±–∞—Ä¬ª: ", await brandH1.count());
    await expect(brandH1.first()).toBeVisible();

    // –°–∫—Ä–∏–Ω—à–æ—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    await takeScreenshot(page, "01-homepage-loaded");

    // 2. –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª ¬´–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ¬ª
    console.log("üìã –®–∞–≥ 2: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Ä–∞–∑–¥–µ–ª –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ");

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–Ω–æ–ø–∫–∏ "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" (–±–µ–∑ —Å—Ç—Ä–æ–≥–æ–≥–æ —Å–∫–æ—É–ø–∞ –ø–æ header/nav –¥–ª—è –±–æ–ª—å—à–µ–π —É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç–∏)
    const navButtons = page.getByRole("button", { name: "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" });
    const count = await navButtons.count();
    console.log("üëÄ –ö–Ω–æ–ø–æ–∫ ¬´–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ¬ª –Ω–∞–π–¥–µ–Ω–æ:", count);

    if (count > 0) {
      await expect(navButtons.first()).toBeVisible();
      // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
      await navButtons.first().click();
    } else {
      // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º CTA –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ
      const cta = page.getByRole("button", { name: "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫" });
      await expect(
        cta,
        "–ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–∏ ¬´–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ¬ª, –∫–ª–∏–∫–∞–µ–º CTA ¬´–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫¬ª",
      ).toBeVisible();
      await cta.click();
    }

    // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ä–º—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    await page.waitForSelector("text=–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∏–∫–∞");
    await expect(
      page.getByRole("heading", { name: "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∏–∫–∞", level: 4 }),
    ).toBeVisible();

    // –°–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    await takeScreenshot(page, "02-booking-page-opened");

    // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–æ—Ä–º—ã
    console.log("üîç –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Ñ–æ—Ä–º—ã");

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    await expect(page.locator("input#name")).toBeVisible();
    await expect(page.locator("input#phone")).toBeVisible();
    await expect(page.locator("input#email")).toBeVisible();
    await expect(page.locator("button", { hasText: "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É" })).toBeVisible();
    await expect(page.locator('[role="combobox"]', { hasText: "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è" })).toBeVisible();
    await expect(page.locator('[role="combobox"]', { hasText: "–ì–æ—Å—Ç–∏" })).toBeVisible();
    await expect(page.locator("textarea#specialRequests")).toBeVisible();
    await expect(page.locator('button[type="submit"]')).toBeVisible();

    console.log("‚úÖ –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");

    // –°–∫—Ä–∏–Ω—à–æ—Ç –ø—É—Å—Ç–æ–π —Ñ–æ—Ä–º—ã
    await takeScreenshot(page, "03-empty-form-validated");

    // 4. –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã
    console.log("‚úèÔ∏è –®–∞–≥ 4: –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è");

    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏
    await page.locator("input#name").fill(testData.name);

    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    await page.locator("input#phone").fill(testData.phone);

    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ email
    await page.locator("input#email").fill(testData.email);

    // –í—ã–±–æ—Ä –¥–∞—Ç—ã (—É–ª—É—á—à–µ–Ω–Ω—ã–π –±–ª–æ–∫ –Ω–∏–∂–µ)

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å: –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –≤ –ø–æ–ª–µ –∑—Ä–µ–Ω–∏—è
    const openCalendarBtn = page.getByRole("button", { name: /–≤—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É/i });
    await openCalendarBtn.scrollIntoViewIfNeeded();
    await openCalendarBtn.click();

    // –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è (react-day-picker)
    const calendarRoot = page.locator(".rdp");
    await expect(calendarRoot).toBeVisible();

    // –í—ã–±–∏—Ä–∞–µ–º –¥–∞—Ç—É –ø–æ —Ç–µ–∫—Å—Ç—É –∫–Ω–æ–ø–∫–∏ –¥–Ω—è (—á–∏—Å–ª–æ). –ï—Å–ª–∏ –Ω—É–∂–Ω—ã–π –¥–µ–Ω—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ —Ç–µ–∫—É—â–µ–º –º–µ—Å—è—Ü–µ, –ø–µ—Ä–µ–ª–∏—Å—Ç—ã–≤–∞–µ–º –º–µ—Å—è—Ü –≤–ø–µ—Ä—ë–¥.
    const targetDay = format(testData.date, "d");

    let selected = false;
    for (let i = 0; i < 12; i++) {
      const enabledDay = calendarRoot
        .locator('button:not([disabled]):not([aria-disabled="true"])')
        .filter({ hasText: new RegExp(`^${targetDay}$`) })
        .first();

      if (await enabledDay.count()) {
        await enabledDay.scrollIntoViewIfNeeded();
        await enabledDay.focus();
        await enabledDay.press("Enter");
        selected = true;
        break;
      }

      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–µ—Å—è—Ü—É
      const nextBtn = calendarRoot.getByRole("button", { name: /next|—Å–ª–µ–¥/i });
      await expect(nextBtn, "–ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü –Ω–µ –Ω–∞–π–¥–µ–Ω–∞").toBeVisible();
      await nextBtn.click();
      // –Ω–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
      await page.waitForTimeout(100);
    }

    // –ï—Å–ª–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π –¥–µ–Ω—å –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
    if (!selected) {
      const fallbackDay = calendarRoot
        .locator('button:not([disabled]):not([aria-disabled="true"])')
        .first();
      await expect(fallbackDay, "–ù–µ –Ω–∞–π–¥–µ–Ω –¥–æ—Å—Ç—É–ø–Ω—ã–π –¥–µ–Ω—å –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ").toBeVisible();
      await fallbackDay.scrollIntoViewIfNeeded();
      await fallbackDay.focus();
      await fallbackDay.press("Enter");
      selected = true;
    }

    expect(selected, "–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ").toBeTruthy();

    // –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
    const timeCombo = page.locator('[role="combobox"]', { hasText: "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è" });
    await timeCombo.scrollIntoViewIfNeeded();
    await timeCombo.click();

    const timeListbox = page.getByRole("listbox");
    await expect(timeListbox).toBeVisible();

    const timeOption = timeListbox.getByRole("option", { name: testData.time });
    await timeOption.scrollIntoViewIfNeeded();
    // –í—ã–±–∏—Ä–∞–µ–º —á–µ—Ä–µ–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, —á—Ç–æ–±—ã –æ–±–æ–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–ª–∏–∫–æ–º
    await timeOption.focus();
    await timeOption.press("Enter");

    await expect(timeListbox).toBeHidden();

    // –í—ã–±–æ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≥–æ—Å—Ç–µ–π
    const guestsCombo = page.locator('[role="combobox"]', { hasText: "–ì–æ—Å—Ç–∏" });
    await guestsCombo.scrollIntoViewIfNeeded();
    await guestsCombo.click();

    const guestsListbox = page.getByRole("listbox");
    await expect(guestsListbox).toBeVisible();

    const guestsOption = guestsListbox.getByRole("option", { name: String(testData.guests) });
    await guestsOption.scrollIntoViewIfNeeded();
    await guestsOption.focus();
    await guestsOption.press("Enter");

    await expect(guestsListbox).toBeHidden();

    // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Å–æ–±—ã—Ö –ø–æ–∂–µ–ª–∞–Ω–∏–π
    await page.locator("textarea#specialRequests").fill(testData.specialRequests);

    console.log("‚úÖ –§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞");

    // –°–∫—Ä–∏–Ω—à–æ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º—ã
    await takeScreenshot(page, "04-form-filled");

    // 5. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
    console.log("üì§ –®–∞–≥ 5: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É");

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–∫—Ç–∏–≤–Ω–∞
    const submitButton = page.locator('button[type="submit"]');
    await expect(submitButton).toBeEnabled();
    await expect(submitButton).toContainText("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–æ–ª–∏–∫");

    // –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    await submitButton.click();

    // –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    await expect(page.locator("button", { hasText: "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º..." })).toBeVisible();

    console.log("üîÑ –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, –æ–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç...");

    // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ
    console.log("üé≠ –®–∞–≥ 6: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ");

    // –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
    await page.waitForSelector("text=–î–µ–º–æ-—Ä–µ–∂–∏–º", { timeout: 10000 });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await expect(page.getByRole("heading", { name: "–î–µ–º–æ-—Ä–µ–∂–∏–º", level: 3 })).toBeVisible();
    await expect(page.locator("text=–°–∏—Å—Ç–µ–º–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ")).toBeVisible();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    await expect(page.locator("button", { hasText: "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" })).toBeVisible();

    console.log("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ");

    // –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ
    await takeScreenshot(page, "05-demo-mode-message");

    // 7. –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
    console.log("üîÑ –®–∞–≥ 7: –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É –¥–ª—è –Ω–æ–≤–æ–≥–æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è");

    await page.locator("button", { hasText: "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ" }).click();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ñ–æ—Ä–º–∞ –æ—á–∏—Å—Ç–∏–ª–∞—Å—å
    await expect(
      page.getByRole("heading", { name: "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–æ–ª–∏–∫–∞", level: 4 }),
    ).toBeVisible();
    await expect(page.locator("input#name")).toHaveValue("");
    await expect(page.locator("input#phone")).toHaveValue("");
    await expect(page.locator("input#email")).toHaveValue("");

    console.log("‚úÖ –§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω–∞");

    // –§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Å–±—Ä–æ—à–µ–Ω–Ω–æ–π —Ñ–æ—Ä–º—ã
    await takeScreenshot(page, "06-form-reset");

    console.log("üéâ E2E-—Ç–µ—Å—Ç –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!");
    console.log(`üìÅ –í—Å–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${screenshotDir}`);
  });

  /**
   * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
   * @param page - –°—Ç—Ä–∞–Ω–∏—Ü–∞ Playwright
   * @param name - –ò–º—è —Ñ–∞–π–ª–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
   */
  async function takeScreenshot(page: Page, name: string) {
    const screenshotPath = path.join(screenshotDir, `${name}.png`);
    await page.screenshot({
      path: screenshotPath,
      fullPage: true,
      type: "png",
    });
    console.log(`üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${name}.png`);
  }

  test.afterEach(async () => {
    console.log(`üìã –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. ID –ø—Ä–æ–≥–æ–Ω–∞: ${testRunId}`);
  });
});
